name: test

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install tools
        run: sudo apt install -y cppcheck
      - name: run clang-format
        run: |
          find ./include -name '*.h'  -print | xargs clang-format -n -Werror && \
          find ./src -name '*.h'  -print | xargs clang-format -n -Werror && \
          find ./src -name '*.cc'  -print | xargs clang-format -n -Werror
      - name: run cppcheck
        run: cppcheck --std=c++17 --quiet --enable=performance,portability --force ./src
  test:
    runs-on: ubuntu-latest
    container: ghcr.io/sdustio/spotng:dev
    env:
      # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
      BUILD_TYPE: Debug
      CMAKE_BUILD: ./build

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        cmake -DSERIAL_BUILD_TESTS:BOOL=TRUE -DCMAKE_BUILD_TYPE:STRING=${{env.BUILD_TYPE}} \
          "-DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" \
          -B ${{env.CMAKE_BUILD}}
    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{env.CMAKE_BUILD}} --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{env.CMAKE_BUILD}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Test Memory Check
      working-directory: ${{env.CMAKE_BUILD}}
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: |
        ctest -C ${{env.BUILD_TYPE}} -T memcheck
